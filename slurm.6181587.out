[cfg] dataset=small data_root=data outdir=outputs log=master_results.log
[cfg] matrix: threads=6 (1 2 4 8 16 32) schedules=4 (static dynamic guided auto) chunks=4 ( 64 256 1024 )
[cfg] behaviour: strict_md5=0 stop_on_testcase_fail=1 verify_each_config=1
[cfg] notify: email=cworbey01@qub.ac.uk begin=false end=true fail=true
[cfg] case=all   use_provided_golds=false
[cfg] infile=data/rawdata/03-output-b.raw
[cfg] search=data/rawdata/03-search.raw
=== CSC4010 Batch Start: Fri 24 Oct 11:05:40 BST 2025 ===
Node: node117.pri.kelvin2.alces.network  JobID: 6181587
OpenMP: OMP_PROC_BIND=close OMP_PLACES=cores OMP_SCHEDULE=unset

=== ENV SNAPSHOT ===
SLURM: ntasks=1 cpus-per-task=32 jobid=6181587
lscpu: Architecture:        x86_64
lscpu: CPU op-mode(s):      32-bit, 64-bit
lscpu: Byte Order:          Little Endian
lscpu: CPU(s):              128
lscpu: On-line CPU(s) list: 0-127
lscpu: Thread(s) per core:  1
lscpu: Core(s) per socket:  64
lscpu: Socket(s):           2
lscpu: NUMA node(s):        8
lscpu: Vendor ID:           AuthenticAMD
lscpu: CPU family:          23
lscpu: Model:               49
lscpu: Model name:          AMD EPYC 7702 64-Core Processor
lscpu: Stepping:            0
lscpu: CPU MHz:             2819.883
lscpu: BogoMIPS:            3992.64
lscpu: Virtualization:      AMD-V
lscpu: L1d cache:           32K
lscpu: L1i cache:           32K
lscpu: L2 cache:            512K
lscpu: L3 cache:            16384K
lscpu: NUMA node0 CPU(s):   0-15
lscpu: NUMA node1 CPU(s):   16-31
lscpu: NUMA node2 CPU(s):   32-47
lscpu: NUMA node3 CPU(s):   48-63
lscpu: NUMA node4 CPU(s):   64-79
lscpu: NUMA node5 CPU(s):   80-95
lscpu: NUMA node6 CPU(s):   96-111
lscpu: NUMA node7 CPU(s):   112-127
lscpu: Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd amd_ppin arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es
numactl: available: 8 nodes (0-7)
numactl: node 0 cpus: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
numactl: node 0 size: 128054 MB
numactl: node 0 free: 105453 MB
numactl: node 1 cpus: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
numactl: node 1 size: 129018 MB
numactl: node 1 free: 112488 MB
numactl: node 2 cpus: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
numactl: node 2 size: 64506 MB
numactl: node 2 free: 53274 MB
numactl: node 3 cpus: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
numactl: node 3 size: 64494 MB
numactl: node 3 free: 51447 MB
numactl: node 4 cpus: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
numactl: node 4 size: 128975 MB
numactl: node 4 free: 102420 MB
numactl: node 5 cpus: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
numactl: node 5 size: 129018 MB
numactl: node 5 free: 96834 MB
numactl: node 6 cpus: 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
numactl: node 6 size: 64506 MB
numactl: node 6 free: 54207 MB
numactl: node 7 cpus: 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127
numactl: node 7 size: 64505 MB
numactl: node 7 free: 58572 MB
numactl: node distances:
numactl: node   0   1   2   3   4   5   6   7 
numactl:   0:  10  12  12  12  32  32  32  32 
numactl:   1:  12  10  12  12  32  32  32  32 
numactl:   2:  12  12  10  12  32  32  32  32 
numactl:   3:  12  12  12  10  32  32  32  32 
numactl:   4:  32  32  32  32  10  12  12  12 
numactl:   5:  32  32  32  32  12  10  12  12 
numactl:   6:  32  32  32  32  12  12  10  12 
numactl:   7:  32  32  32  32  12  12  12  10 
====================

[cfg] threads (capped to 32): 1 2 4 8 16 32
>>> build.sh starting (pwd=/users/40323788/CSC4003_cousework_1)
>>> conf.sh sourced
>>> config loaded
>>> CC=gcc
>>> CFLAGS_SEQ=-O3 -std=c11 -Wall -Wextra -Wpedantic
>>> CFLAGS_OMP=-O3 -fopenmp -std=c11 -Wall -Wextra -Wpedantic
>>> LDFLAGS=<empty>
==> Building sequential baselines
  process-a.c -> a_seq
  process-b.c -> b_seq
==> Compiling OpenMP schedule shim
==> Scanning & building variants (process-a_tc*.c / process-b_tc*.c)
  process-a_tc1.c -> a_tc1_static_64  [baked: static,64]
  process-a_tc1.c -> a_tc1_static_256  [baked: static,256]
  process-a_tc1.c -> a_tc1_static_1024  [baked: static,1024]
  process-a_tc1.c -> a_tc1_static  [baked: static]
  process-a_tc1.c -> a_tc1_dynamic_64  [baked: dynamic,64]
  process-a_tc1.c -> a_tc1_dynamic_256  [baked: dynamic,256]
  process-a_tc1.c -> a_tc1_dynamic_1024  [baked: dynamic,1024]
  process-a_tc1.c -> a_tc1_dynamic  [baked: dynamic]
  process-a_tc1.c -> a_tc1_guided_64  [baked: guided,64]
  process-a_tc1.c -> a_tc1_guided_256  [baked: guided,256]
  process-a_tc1.c -> a_tc1_guided_1024  [baked: guided,1024]
  process-a_tc1.c -> a_tc1_guided  [baked: guided]
  process-a_tc1.c -> a_tc1_auto  [baked: auto]
  process-a_tc2.c -> a_tc2_static_64  [baked: static,64]
  process-a_tc2.c -> a_tc2_static_256  [baked: static,256]
  process-a_tc2.c -> a_tc2_static_1024  [baked: static,1024]
  process-a_tc2.c -> a_tc2_static  [baked: static]
  process-a_tc2.c -> a_tc2_dynamic_64  [baked: dynamic,64]
  process-a_tc2.c -> a_tc2_dynamic_256  [baked: dynamic,256]
  process-a_tc2.c -> a_tc2_dynamic_1024  [baked: dynamic,1024]
  process-a_tc2.c -> a_tc2_dynamic  [baked: dynamic]
  process-a_tc2.c -> a_tc2_guided_64  [baked: guided,64]
  process-a_tc2.c -> a_tc2_guided_256  [baked: guided,256]
  process-a_tc2.c -> a_tc2_guided_1024  [baked: guided,1024]
  process-a_tc2.c -> a_tc2_guided  [baked: guided]
  process-a_tc2.c -> a_tc2_auto  [baked: auto]
  process-a_tc3.c -> a_tc3_static_64  [baked: static,64]
  process-a_tc3.c -> a_tc3_static_256  [baked: static,256]
  process-a_tc3.c -> a_tc3_static_1024  [baked: static,1024]
  process-a_tc3.c -> a_tc3_static  [baked: static]
  process-a_tc3.c -> a_tc3_dynamic_64  [baked: dynamic,64]
  process-a_tc3.c -> a_tc3_dynamic_256  [baked: dynamic,256]
  process-a_tc3.c -> a_tc3_dynamic_1024  [baked: dynamic,1024]
  process-a_tc3.c -> a_tc3_dynamic  [baked: dynamic]
  process-a_tc3.c -> a_tc3_guided_64  [baked: guided,64]
  process-a_tc3.c -> a_tc3_guided_256  [baked: guided,256]
  process-a_tc3.c -> a_tc3_guided_1024  [baked: guided,1024]
  process-a_tc3.c -> a_tc3_guided  [baked: guided]
  process-a_tc3.c -> a_tc3_auto  [baked: auto]
  process-a_tc4.c -> a_tc4  [no runtime schedule found → single build]
  process-b_tc1.c -> b_tc1_static_64  [baked: static,64]
  process-b_tc1.c -> b_tc1_static_256  [baked: static,256]
  process-b_tc1.c -> b_tc1_static_1024  [baked: static,1024]
  process-b_tc1.c -> b_tc1_static  [baked: static]
  process-b_tc1.c -> b_tc1_dynamic_64  [baked: dynamic,64]
  process-b_tc1.c -> b_tc1_dynamic_256  [baked: dynamic,256]
  process-b_tc1.c -> b_tc1_dynamic_1024  [baked: dynamic,1024]
  process-b_tc1.c -> b_tc1_dynamic  [baked: dynamic]
  process-b_tc1.c -> b_tc1_guided_64  [baked: guided,64]
  process-b_tc1.c -> b_tc1_guided_256  [baked: guided,256]
  process-b_tc1.c -> b_tc1_guided_1024  [baked: guided,1024]
  process-b_tc1.c -> b_tc1_guided  [baked: guided]
  process-b_tc1.c -> b_tc1_auto  [baked: auto]
  process-b_tc2.c -> b_tc2_static_64  [baked: static,64]
  process-b_tc2.c -> b_tc2_static_256  [baked: static,256]
  process-b_tc2.c -> b_tc2_static_1024  [baked: static,1024]
  process-b_tc2.c -> b_tc2_static  [baked: static]
  process-b_tc2.c -> b_tc2_dynamic_64  [baked: dynamic,64]
  process-b_tc2.c -> b_tc2_dynamic_256  [baked: dynamic,256]
  process-b_tc2.c -> b_tc2_dynamic_1024  [baked: dynamic,1024]
  process-b_tc2.c -> b_tc2_dynamic  [baked: dynamic]
  process-b_tc2.c -> b_tc2_guided_64  [baked: guided,64]
  process-b_tc2.c -> b_tc2_guided_256  [baked: guided,256]
  process-b_tc2.c -> b_tc2_guided_1024  [baked: guided,1024]
  process-b_tc2.c -> b_tc2_guided  [baked: guided]
  process-b_tc2.c -> b_tc2_auto  [baked: auto]
  process-b_tc3.c -> b_tc3  [no runtime schedule found → single build]
  process-b_tc4.c -> b_tc4_static_64  [baked: static,64]
  process-b_tc4.c -> b_tc4_static_256  [baked: static,256]
  process-b_tc4.c -> b_tc4_static_1024  [baked: static,1024]
  process-b_tc4.c -> b_tc4_static  [baked: static]
  process-b_tc4.c -> b_tc4_dynamic_64  [baked: dynamic,64]
  process-b_tc4.c -> b_tc4_dynamic_256  [baked: dynamic,256]
  process-b_tc4.c -> b_tc4_dynamic_1024  [baked: dynamic,1024]
  process-b_tc4.c -> b_tc4_dynamic  [baked: dynamic]
  process-b_tc4.c -> b_tc4_guided_64  [baked: guided,64]
  process-b_tc4.c -> b_tc4_guided_256  [baked: guided,256]
  process-b_tc4.c -> b_tc4_guided_1024  [baked: guided,1024]
  process-b_tc4.c -> b_tc4_guided  [baked: guided]
  process-b_tc4.c -> b_tc4_auto  [baked: auto]
Built 8 variant executable(s).
Build complete
== Baselines (sequential) ==
GOLD_A: 40f6e6cebbeb735d2dcbb02152139bae
GOLD_B: f4ce83535e8dc2f8c1a1844fa4143625
Found built Method A executables: 40 -> a_tc1_auto a_tc1_dynamic a_tc1_dynamic_64 a_tc1_dynamic_256 a_tc1_dynamic_1024 a_tc1_guided a_tc1_guided_64 a_tc1_guided_256 a_tc1_guided_1024 a_tc1_static a_tc1_static_64 a_tc1_static_256 a_tc1_static_1024 a_tc2_auto a_tc2_dynamic a_tc2_dynamic_64 a_tc2_dynamic_256 a_tc2_dynamic_1024 a_tc2_guided a_tc2_guided_64 a_tc2_guided_256 a_tc2_guided_1024 a_tc2_static a_tc2_static_64 a_tc2_static_256 a_tc2_static_1024 a_tc3_auto a_tc3_dynamic a_tc3_dynamic_64 a_tc3_dynamic_256 a_tc3_dynamic_1024 a_tc3_guided a_tc3_guided_64 a_tc3_guided_256 a_tc3_guided_1024 a_tc3_static a_tc3_static_64 a_tc3_static_256 a_tc3_static_1024 a_tc4
Found built Method B executables: 40 -> b_tc1_auto b_tc1_dynamic b_tc1_dynamic_64 b_tc1_dynamic_256 b_tc1_dynamic_1024 b_tc1_guided b_tc1_guided_64 b_tc1_guided_256 b_tc1_guided_1024 b_tc1_static b_tc1_static_64 b_tc1_static_256 b_tc1_static_1024 b_tc2_auto b_tc2_dynamic b_tc2_dynamic_64 b_tc2_dynamic_256 b_tc2_dynamic_1024 b_tc2_guided b_tc2_guided_64 b_tc2_guided_256 b_tc2_guided_1024 b_tc2_static b_tc2_static_64 b_tc2_static_256 b_tc2_static_1024 b_tc3 b_tc4_auto b_tc4_dynamic b_tc4_dynamic_64 b_tc4_dynamic_256 b_tc4_dynamic_1024 b_tc4_guided b_tc4_guided_64 b_tc4_guided_256 b_tc4_guided_1024 b_tc4_static b_tc4_static_64 b_tc4_static_256 b_tc4_static_1024
[A] a_tc1_auto -> A_tc1_t1_auto
[A] a_tc1_auto -> A_tc1_t2_auto
[A] a_tc1_auto -> A_tc1_t4_auto
[A] a_tc1_auto -> A_tc1_t8_auto
[A] a_tc1_auto -> A_tc1_t16_auto
[A] a_tc1_auto -> A_tc1_t32_auto
[A] a_tc1_dynamic -> A_tc1_t1_dynamic
[A] a_tc1_dynamic -> A_tc1_t2_dynamic
[A] a_tc1_dynamic -> A_tc1_t4_dynamic
[A] a_tc1_dynamic -> A_tc1_t8_dynamic
[A] a_tc1_dynamic -> A_tc1_t16_dynamic
[A] a_tc1_dynamic -> A_tc1_t32_dynamic
[A] a_tc1_dynamic_64 -> A_tc1_t1_dynamic_64
[A] a_tc1_dynamic_64 -> A_tc1_t2_dynamic_64
[A] a_tc1_dynamic_64 -> A_tc1_t4_dynamic_64
[A] a_tc1_dynamic_64 -> A_tc1_t8_dynamic_64
[A] a_tc1_dynamic_64 -> A_tc1_t16_dynamic_64
[A] a_tc1_dynamic_64 -> A_tc1_t32_dynamic_64
[A] a_tc1_dynamic_256 -> A_tc1_t1_dynamic_256
[A] a_tc1_dynamic_256 -> A_tc1_t2_dynamic_256
[A] a_tc1_dynamic_256 -> A_tc1_t4_dynamic_256
[A] a_tc1_dynamic_256 -> A_tc1_t8_dynamic_256
[A] a_tc1_dynamic_256 -> A_tc1_t16_dynamic_256
[A] a_tc1_dynamic_256 -> A_tc1_t32_dynamic_256
[A] a_tc1_dynamic_1024 -> A_tc1_t1_dynamic_1024
[A] a_tc1_dynamic_1024 -> A_tc1_t2_dynamic_1024
[A] a_tc1_dynamic_1024 -> A_tc1_t4_dynamic_1024
[A] a_tc1_dynamic_1024 -> A_tc1_t8_dynamic_1024
[A] a_tc1_dynamic_1024 -> A_tc1_t16_dynamic_1024
[A] a_tc1_dynamic_1024 -> A_tc1_t32_dynamic_1024
[A] a_tc1_guided -> A_tc1_t1_guided
[A] a_tc1_guided -> A_tc1_t2_guided
[A] a_tc1_guided -> A_tc1_t4_guided
[A] a_tc1_guided -> A_tc1_t8_guided
[A] a_tc1_guided -> A_tc1_t16_guided
[A] a_tc1_guided -> A_tc1_t32_guided
[A] a_tc1_guided_64 -> A_tc1_t1_guided_64
[A] a_tc1_guided_64 -> A_tc1_t2_guided_64
[A] a_tc1_guided_64 -> A_tc1_t4_guided_64
[A] a_tc1_guided_64 -> A_tc1_t8_guided_64
[A] a_tc1_guided_64 -> A_tc1_t16_guided_64
[A] a_tc1_guided_64 -> A_tc1_t32_guided_64
[A] a_tc1_guided_256 -> A_tc1_t1_guided_256
[A] a_tc1_guided_256 -> A_tc1_t2_guided_256
[A] a_tc1_guided_256 -> A_tc1_t4_guided_256
[A] a_tc1_guided_256 -> A_tc1_t8_guided_256
[A] a_tc1_guided_256 -> A_tc1_t16_guided_256
[A] a_tc1_guided_256 -> A_tc1_t32_guided_256
[A] a_tc1_guided_1024 -> A_tc1_t1_guided_1024
[A] a_tc1_guided_1024 -> A_tc1_t2_guided_1024
[A] a_tc1_guided_1024 -> A_tc1_t4_guided_1024
[A] a_tc1_guided_1024 -> A_tc1_t8_guided_1024
[A] a_tc1_guided_1024 -> A_tc1_t16_guided_1024
[A] a_tc1_guided_1024 -> A_tc1_t32_guided_1024
[A] a_tc1_static -> A_tc1_t1_static
[A] a_tc1_static -> A_tc1_t2_static
[A] a_tc1_static -> A_tc1_t4_static
[A] a_tc1_static -> A_tc1_t8_static
[A] a_tc1_static -> A_tc1_t16_static
[A] a_tc1_static -> A_tc1_t32_static
[A] a_tc1_static_64 -> A_tc1_t1_static_64
[A] a_tc1_static_64 -> A_tc1_t2_static_64
[A] a_tc1_static_64 -> A_tc1_t4_static_64
[A] a_tc1_static_64 -> A_tc1_t8_static_64
[A] a_tc1_static_64 -> A_tc1_t16_static_64
[A] a_tc1_static_64 -> A_tc1_t32_static_64
[A] a_tc1_static_256 -> A_tc1_t1_static_256
[A] a_tc1_static_256 -> A_tc1_t2_static_256
[A] a_tc1_static_256 -> A_tc1_t4_static_256
[A] a_tc1_static_256 -> A_tc1_t8_static_256
[A] a_tc1_static_256 -> A_tc1_t16_static_256
[A] a_tc1_static_256 -> A_tc1_t32_static_256
[A] a_tc1_static_1024 -> A_tc1_t1_static_1024
[A] a_tc1_static_1024 -> A_tc1_t2_static_1024
[A] a_tc1_static_1024 -> A_tc1_t4_static_1024
[A] a_tc1_static_1024 -> A_tc1_t8_static_1024
[A] a_tc1_static_1024 -> A_tc1_t16_static_1024
[A] a_tc1_static_1024 -> A_tc1_t32_static_1024
[A] a_tc2_auto -> A_tc2_t1_auto
[A] a_tc2_auto -> A_tc2_t2_auto
[A] a_tc2_auto -> A_tc2_t4_auto
[A] a_tc2_auto -> A_tc2_t8_auto
[A] a_tc2_auto -> A_tc2_t16_auto
[A] a_tc2_auto -> A_tc2_t32_auto
[A] a_tc2_dynamic -> A_tc2_t1_dynamic
[A] a_tc2_dynamic -> A_tc2_t2_dynamic
[A] a_tc2_dynamic -> A_tc2_t4_dynamic
[A] a_tc2_dynamic -> A_tc2_t8_dynamic
[A] a_tc2_dynamic -> A_tc2_t16_dynamic
[A] a_tc2_dynamic -> A_tc2_t32_dynamic
[A] a_tc2_dynamic_64 -> A_tc2_t1_dynamic_64
[A] a_tc2_dynamic_64 -> A_tc2_t2_dynamic_64
[A] a_tc2_dynamic_64 -> A_tc2_t4_dynamic_64
[A] a_tc2_dynamic_64 -> A_tc2_t8_dynamic_64
[A] a_tc2_dynamic_64 -> A_tc2_t16_dynamic_64
[A] a_tc2_dynamic_64 -> A_tc2_t32_dynamic_64
[A] a_tc2_dynamic_256 -> A_tc2_t1_dynamic_256
[A] a_tc2_dynamic_256 -> A_tc2_t2_dynamic_256
[A] a_tc2_dynamic_256 -> A_tc2_t4_dynamic_256
[A] a_tc2_dynamic_256 -> A_tc2_t8_dynamic_256
[A] a_tc2_dynamic_256 -> A_tc2_t16_dynamic_256
[A] a_tc2_dynamic_256 -> A_tc2_t32_dynamic_256
[A] a_tc2_dynamic_1024 -> A_tc2_t1_dynamic_1024
[A] a_tc2_dynamic_1024 -> A_tc2_t2_dynamic_1024
[A] a_tc2_dynamic_1024 -> A_tc2_t4_dynamic_1024
[A] a_tc2_dynamic_1024 -> A_tc2_t8_dynamic_1024
[A] a_tc2_dynamic_1024 -> A_tc2_t16_dynamic_1024
[A] a_tc2_dynamic_1024 -> A_tc2_t32_dynamic_1024
[A] a_tc2_guided -> A_tc2_t1_guided
[A] a_tc2_guided -> A_tc2_t2_guided
[A] a_tc2_guided -> A_tc2_t4_guided
[A] a_tc2_guided -> A_tc2_t8_guided
[A] a_tc2_guided -> A_tc2_t16_guided
[A] a_tc2_guided -> A_tc2_t32_guided
[A] a_tc2_guided_64 -> A_tc2_t1_guided_64
[A] a_tc2_guided_64 -> A_tc2_t2_guided_64
[A] a_tc2_guided_64 -> A_tc2_t4_guided_64
[A] a_tc2_guided_64 -> A_tc2_t8_guided_64
[A] a_tc2_guided_64 -> A_tc2_t16_guided_64
[A] a_tc2_guided_64 -> A_tc2_t32_guided_64
[A] a_tc2_guided_256 -> A_tc2_t1_guided_256
[A] a_tc2_guided_256 -> A_tc2_t2_guided_256
[A] a_tc2_guided_256 -> A_tc2_t4_guided_256
[A] a_tc2_guided_256 -> A_tc2_t8_guided_256
[A] a_tc2_guided_256 -> A_tc2_t16_guided_256
[A] a_tc2_guided_256 -> A_tc2_t32_guided_256
[A] a_tc2_guided_1024 -> A_tc2_t1_guided_1024
[A] a_tc2_guided_1024 -> A_tc2_t2_guided_1024
[A] a_tc2_guided_1024 -> A_tc2_t4_guided_1024
[A] a_tc2_guided_1024 -> A_tc2_t8_guided_1024
[A] a_tc2_guided_1024 -> A_tc2_t16_guided_1024
[A] a_tc2_guided_1024 -> A_tc2_t32_guided_1024
[A] a_tc2_static -> A_tc2_t1_static
[A] a_tc2_static -> A_tc2_t2_static
[A] a_tc2_static -> A_tc2_t4_static
[A] a_tc2_static -> A_tc2_t8_static
[A] a_tc2_static -> A_tc2_t16_static
[A] a_tc2_static -> A_tc2_t32_static
[A] a_tc2_static_64 -> A_tc2_t1_static_64
[A] a_tc2_static_64 -> A_tc2_t2_static_64
[A] a_tc2_static_64 -> A_tc2_t4_static_64
[A] a_tc2_static_64 -> A_tc2_t8_static_64
[A] a_tc2_static_64 -> A_tc2_t16_static_64
[A] a_tc2_static_64 -> A_tc2_t32_static_64
[A] a_tc2_static_256 -> A_tc2_t1_static_256
[A] a_tc2_static_256 -> A_tc2_t2_static_256
[A] a_tc2_static_256 -> A_tc2_t4_static_256
[A] a_tc2_static_256 -> A_tc2_t8_static_256
[A] a_tc2_static_256 -> A_tc2_t16_static_256
[A] a_tc2_static_256 -> A_tc2_t32_static_256
[A] a_tc2_static_1024 -> A_tc2_t1_static_1024
[A] a_tc2_static_1024 -> A_tc2_t2_static_1024
[A] a_tc2_static_1024 -> A_tc2_t4_static_1024
[A] a_tc2_static_1024 -> A_tc2_t8_static_1024
[A] a_tc2_static_1024 -> A_tc2_t16_static_1024
[A] a_tc2_static_1024 -> A_tc2_t32_static_1024
[A] a_tc3_auto -> A_tc3_t1_auto
[A] a_tc3_auto -> A_tc3_t2_auto
[A] a_tc3_auto -> A_tc3_t4_auto
[A] a_tc3_auto -> A_tc3_t8_auto
[A] a_tc3_auto -> A_tc3_t16_auto
[A] a_tc3_auto -> A_tc3_t32_auto
[A] a_tc3_dynamic -> A_tc3_t1_dynamic
[A] a_tc3_dynamic -> A_tc3_t2_dynamic
[A] a_tc3_dynamic -> A_tc3_t4_dynamic
[A] a_tc3_dynamic -> A_tc3_t8_dynamic
[A] a_tc3_dynamic -> A_tc3_t16_dynamic
[A] a_tc3_dynamic -> A_tc3_t32_dynamic
[A] a_tc3_dynamic_64 -> A_tc3_t1_dynamic_64
[A] a_tc3_dynamic_64 -> A_tc3_t2_dynamic_64
[A] a_tc3_dynamic_64 -> A_tc3_t4_dynamic_64
[A] a_tc3_dynamic_64 -> A_tc3_t8_dynamic_64
[A] a_tc3_dynamic_64 -> A_tc3_t16_dynamic_64
[A] a_tc3_dynamic_64 -> A_tc3_t32_dynamic_64
[A] a_tc3_dynamic_256 -> A_tc3_t1_dynamic_256
[A] a_tc3_dynamic_256 -> A_tc3_t2_dynamic_256
[A] a_tc3_dynamic_256 -> A_tc3_t4_dynamic_256
[A] a_tc3_dynamic_256 -> A_tc3_t8_dynamic_256
[A] a_tc3_dynamic_256 -> A_tc3_t16_dynamic_256
[A] a_tc3_dynamic_256 -> A_tc3_t32_dynamic_256
[A] a_tc3_dynamic_1024 -> A_tc3_t1_dynamic_1024
[A] a_tc3_dynamic_1024 -> A_tc3_t2_dynamic_1024
[A] a_tc3_dynamic_1024 -> A_tc3_t4_dynamic_1024
[A] a_tc3_dynamic_1024 -> A_tc3_t8_dynamic_1024
[A] a_tc3_dynamic_1024 -> A_tc3_t16_dynamic_1024
[A] a_tc3_dynamic_1024 -> A_tc3_t32_dynamic_1024
[A] a_tc3_guided -> A_tc3_t1_guided
[A] a_tc3_guided -> A_tc3_t2_guided
[A] a_tc3_guided -> A_tc3_t4_guided
[A] a_tc3_guided -> A_tc3_t8_guided
[A] a_tc3_guided -> A_tc3_t16_guided
[A] a_tc3_guided -> A_tc3_t32_guided
[A] a_tc3_guided_64 -> A_tc3_t1_guided_64
[A] a_tc3_guided_64 -> A_tc3_t2_guided_64
[A] a_tc3_guided_64 -> A_tc3_t4_guided_64
[A] a_tc3_guided_64 -> A_tc3_t8_guided_64
[A] a_tc3_guided_64 -> A_tc3_t16_guided_64
[A] a_tc3_guided_64 -> A_tc3_t32_guided_64
[A] a_tc3_guided_256 -> A_tc3_t1_guided_256
[A] a_tc3_guided_256 -> A_tc3_t2_guided_256
[A] a_tc3_guided_256 -> A_tc3_t4_guided_256
[A] a_tc3_guided_256 -> A_tc3_t8_guided_256
[A] a_tc3_guided_256 -> A_tc3_t16_guided_256
[A] a_tc3_guided_256 -> A_tc3_t32_guided_256
[A] a_tc3_guided_1024 -> A_tc3_t1_guided_1024
[A] a_tc3_guided_1024 -> A_tc3_t2_guided_1024
[A] a_tc3_guided_1024 -> A_tc3_t4_guided_1024
[A] a_tc3_guided_1024 -> A_tc3_t8_guided_1024
[A] a_tc3_guided_1024 -> A_tc3_t16_guided_1024
[A] a_tc3_guided_1024 -> A_tc3_t32_guided_1024
[A] a_tc3_static -> A_tc3_t1_static
[A] a_tc3_static -> A_tc3_t2_static
[A] a_tc3_static -> A_tc3_t4_static
[A] a_tc3_static -> A_tc3_t8_static
[A] a_tc3_static -> A_tc3_t16_static
[A] a_tc3_static -> A_tc3_t32_static
[A] a_tc3_static_64 -> A_tc3_t1_static_64
[A] a_tc3_static_64 -> A_tc3_t2_static_64
[A] a_tc3_static_64 -> A_tc3_t4_static_64
[A] a_tc3_static_64 -> A_tc3_t8_static_64
[A] a_tc3_static_64 -> A_tc3_t16_static_64
[A] a_tc3_static_64 -> A_tc3_t32_static_64
[A] a_tc3_static_256 -> A_tc3_t1_static_256
[A] a_tc3_static_256 -> A_tc3_t2_static_256
[A] a_tc3_static_256 -> A_tc3_t4_static_256
[A] a_tc3_static_256 -> A_tc3_t8_static_256
[A] a_tc3_static_256 -> A_tc3_t16_static_256
[A] a_tc3_static_256 -> A_tc3_t32_static_256
[A] a_tc3_static_1024 -> A_tc3_t1_static_1024
[A] a_tc3_static_1024 -> A_tc3_t2_static_1024
[A] a_tc3_static_1024 -> A_tc3_t4_static_1024
[A] a_tc3_static_1024 -> A_tc3_t8_static_1024
[A] a_tc3_static_1024 -> A_tc3_t16_static_1024
[A] a_tc3_static_1024 -> A_tc3_t32_static_1024
[A] a_tc4 -> A_tc4_t1_a_tc4
[A] a_tc4 -> A_tc4_t2_a_tc4
[A] a_tc4 -> A_tc4_t4_a_tc4
[A] a_tc4 -> A_tc4_t8_a_tc4
[A] a_tc4 -> A_tc4_t16_a_tc4
[A] a_tc4 -> A_tc4_t32_a_tc4
[B] b_tc1_auto -> B_tc1_t1_auto
[B] b_tc1_auto -> B_tc1_t2_auto
[B] b_tc1_auto -> B_tc1_t4_auto
[B] b_tc1_auto -> B_tc1_t8_auto
[B] b_tc1_auto -> B_tc1_t16_auto
[B] b_tc1_auto -> B_tc1_t32_auto
[B] b_tc1_dynamic -> B_tc1_t1_dynamic
[B] b_tc1_dynamic -> B_tc1_t2_dynamic
[B] b_tc1_dynamic -> B_tc1_t4_dynamic
[B] b_tc1_dynamic -> B_tc1_t8_dynamic
[B] b_tc1_dynamic -> B_tc1_t16_dynamic
[B] b_tc1_dynamic -> B_tc1_t32_dynamic
[B] b_tc1_dynamic_64 -> B_tc1_t1_dynamic_64
[B] b_tc1_dynamic_64 -> B_tc1_t2_dynamic_64
[B] b_tc1_dynamic_64 -> B_tc1_t4_dynamic_64
[B] b_tc1_dynamic_64 -> B_tc1_t8_dynamic_64
[B] b_tc1_dynamic_64 -> B_tc1_t16_dynamic_64
[B] b_tc1_dynamic_64 -> B_tc1_t32_dynamic_64
[B] b_tc1_dynamic_256 -> B_tc1_t1_dynamic_256
[B] b_tc1_dynamic_256 -> B_tc1_t2_dynamic_256
[B] b_tc1_dynamic_256 -> B_tc1_t4_dynamic_256
[B] b_tc1_dynamic_256 -> B_tc1_t8_dynamic_256
[B] b_tc1_dynamic_256 -> B_tc1_t16_dynamic_256
[B] b_tc1_dynamic_256 -> B_tc1_t32_dynamic_256
[B] b_tc1_dynamic_1024 -> B_tc1_t1_dynamic_1024
[B] b_tc1_dynamic_1024 -> B_tc1_t2_dynamic_1024
[B] b_tc1_dynamic_1024 -> B_tc1_t4_dynamic_1024
[B] b_tc1_dynamic_1024 -> B_tc1_t8_dynamic_1024
[B] b_tc1_dynamic_1024 -> B_tc1_t16_dynamic_1024
[B] b_tc1_dynamic_1024 -> B_tc1_t32_dynamic_1024
[B] b_tc1_guided -> B_tc1_t1_guided
[B] b_tc1_guided -> B_tc1_t2_guided
[B] b_tc1_guided -> B_tc1_t4_guided
[B] b_tc1_guided -> B_tc1_t8_guided
[B] b_tc1_guided -> B_tc1_t16_guided
[B] b_tc1_guided -> B_tc1_t32_guided
[B] b_tc1_guided_64 -> B_tc1_t1_guided_64
[B] b_tc1_guided_64 -> B_tc1_t2_guided_64
[B] b_tc1_guided_64 -> B_tc1_t4_guided_64
[B] b_tc1_guided_64 -> B_tc1_t8_guided_64
[B] b_tc1_guided_64 -> B_tc1_t16_guided_64
[B] b_tc1_guided_64 -> B_tc1_t32_guided_64
[B] b_tc1_guided_256 -> B_tc1_t1_guided_256
[B] b_tc1_guided_256 -> B_tc1_t2_guided_256
[B] b_tc1_guided_256 -> B_tc1_t4_guided_256
[B] b_tc1_guided_256 -> B_tc1_t8_guided_256
[B] b_tc1_guided_256 -> B_tc1_t16_guided_256
[B] b_tc1_guided_256 -> B_tc1_t32_guided_256
[B] b_tc1_guided_1024 -> B_tc1_t1_guided_1024
[B] b_tc1_guided_1024 -> B_tc1_t2_guided_1024
[B] b_tc1_guided_1024 -> B_tc1_t4_guided_1024
[B] b_tc1_guided_1024 -> B_tc1_t8_guided_1024
[B] b_tc1_guided_1024 -> B_tc1_t16_guided_1024
[B] b_tc1_guided_1024 -> B_tc1_t32_guided_1024
[B] b_tc1_static -> B_tc1_t1_static
[B] b_tc1_static -> B_tc1_t2_static
[B] b_tc1_static -> B_tc1_t4_static
[B] b_tc1_static -> B_tc1_t8_static
[B] b_tc1_static -> B_tc1_t16_static
[B] b_tc1_static -> B_tc1_t32_static
[B] b_tc1_static_64 -> B_tc1_t1_static_64
[B] b_tc1_static_64 -> B_tc1_t2_static_64
[B] b_tc1_static_64 -> B_tc1_t4_static_64
[B] b_tc1_static_64 -> B_tc1_t8_static_64
[B] b_tc1_static_64 -> B_tc1_t16_static_64
[B] b_tc1_static_64 -> B_tc1_t32_static_64
[B] b_tc1_static_256 -> B_tc1_t1_static_256
[B] b_tc1_static_256 -> B_tc1_t2_static_256
[B] b_tc1_static_256 -> B_tc1_t4_static_256
[B] b_tc1_static_256 -> B_tc1_t8_static_256
[B] b_tc1_static_256 -> B_tc1_t16_static_256
[B] b_tc1_static_256 -> B_tc1_t32_static_256
[B] b_tc1_static_1024 -> B_tc1_t1_static_1024
[B] b_tc1_static_1024 -> B_tc1_t2_static_1024
[B] b_tc1_static_1024 -> B_tc1_t4_static_1024
[B] b_tc1_static_1024 -> B_tc1_t8_static_1024
[B] b_tc1_static_1024 -> B_tc1_t16_static_1024
[B] b_tc1_static_1024 -> B_tc1_t32_static_1024
[B] b_tc2_auto -> B_tc2_t1_auto
[B] b_tc2_auto -> B_tc2_t2_auto
[B] b_tc2_auto -> B_tc2_t4_auto
[B] b_tc2_auto -> B_tc2_t8_auto
[B] b_tc2_auto -> B_tc2_t16_auto
[B] b_tc2_auto -> B_tc2_t32_auto
[B] b_tc2_dynamic -> B_tc2_t1_dynamic
[B] b_tc2_dynamic -> B_tc2_t2_dynamic
[B] b_tc2_dynamic -> B_tc2_t4_dynamic
[B] b_tc2_dynamic -> B_tc2_t8_dynamic
[B] b_tc2_dynamic -> B_tc2_t16_dynamic
[B] b_tc2_dynamic -> B_tc2_t32_dynamic
[B] b_tc2_dynamic_64 -> B_tc2_t1_dynamic_64
[B] b_tc2_dynamic_64 -> B_tc2_t2_dynamic_64
[B] b_tc2_dynamic_64 -> B_tc2_t4_dynamic_64
[B] b_tc2_dynamic_64 -> B_tc2_t8_dynamic_64
[B] b_tc2_dynamic_64 -> B_tc2_t16_dynamic_64
[B] b_tc2_dynamic_64 -> B_tc2_t32_dynamic_64
[B] b_tc2_dynamic_256 -> B_tc2_t1_dynamic_256
[B] b_tc2_dynamic_256 -> B_tc2_t2_dynamic_256
[B] b_tc2_dynamic_256 -> B_tc2_t4_dynamic_256
[B] b_tc2_dynamic_256 -> B_tc2_t8_dynamic_256
[B] b_tc2_dynamic_256 -> B_tc2_t16_dynamic_256
[B] b_tc2_dynamic_256 -> B_tc2_t32_dynamic_256
[B] b_tc2_dynamic_1024 -> B_tc2_t1_dynamic_1024
[B] b_tc2_dynamic_1024 -> B_tc2_t2_dynamic_1024
[B] b_tc2_dynamic_1024 -> B_tc2_t4_dynamic_1024
[B] b_tc2_dynamic_1024 -> B_tc2_t8_dynamic_1024
[B] b_tc2_dynamic_1024 -> B_tc2_t16_dynamic_1024
[B] b_tc2_dynamic_1024 -> B_tc2_t32_dynamic_1024
[B] b_tc2_guided -> B_tc2_t1_guided
[B] b_tc2_guided -> B_tc2_t2_guided
[B] b_tc2_guided -> B_tc2_t4_guided
[B] b_tc2_guided -> B_tc2_t8_guided
[B] b_tc2_guided -> B_tc2_t16_guided
[B] b_tc2_guided -> B_tc2_t32_guided
[B] b_tc2_guided_64 -> B_tc2_t1_guided_64
[B] b_tc2_guided_64 -> B_tc2_t2_guided_64
[B] b_tc2_guided_64 -> B_tc2_t4_guided_64
[B] b_tc2_guided_64 -> B_tc2_t8_guided_64
[B] b_tc2_guided_64 -> B_tc2_t16_guided_64
[B] b_tc2_guided_64 -> B_tc2_t32_guided_64
[B] b_tc2_guided_256 -> B_tc2_t1_guided_256
[B] b_tc2_guided_256 -> B_tc2_t2_guided_256
[B] b_tc2_guided_256 -> B_tc2_t4_guided_256
[B] b_tc2_guided_256 -> B_tc2_t8_guided_256
[B] b_tc2_guided_256 -> B_tc2_t16_guided_256
[B] b_tc2_guided_256 -> B_tc2_t32_guided_256
[B] b_tc2_guided_1024 -> B_tc2_t1_guided_1024
[B] b_tc2_guided_1024 -> B_tc2_t2_guided_1024
[B] b_tc2_guided_1024 -> B_tc2_t4_guided_1024
[B] b_tc2_guided_1024 -> B_tc2_t8_guided_1024
[B] b_tc2_guided_1024 -> B_tc2_t16_guided_1024
[B] b_tc2_guided_1024 -> B_tc2_t32_guided_1024
[B] b_tc2_static -> B_tc2_t1_static
[B] b_tc2_static -> B_tc2_t2_static
[B] b_tc2_static -> B_tc2_t4_static
[B] b_tc2_static -> B_tc2_t8_static
[B] b_tc2_static -> B_tc2_t16_static
[B] b_tc2_static -> B_tc2_t32_static
[B] b_tc2_static_64 -> B_tc2_t1_static_64
[B] b_tc2_static_64 -> B_tc2_t2_static_64
[B] b_tc2_static_64 -> B_tc2_t4_static_64
[B] b_tc2_static_64 -> B_tc2_t8_static_64
[B] b_tc2_static_64 -> B_tc2_t16_static_64
[B] b_tc2_static_64 -> B_tc2_t32_static_64
[B] b_tc2_static_256 -> B_tc2_t1_static_256
[B] b_tc2_static_256 -> B_tc2_t2_static_256
[B] b_tc2_static_256 -> B_tc2_t4_static_256
[B] b_tc2_static_256 -> B_tc2_t8_static_256
[B] b_tc2_static_256 -> B_tc2_t16_static_256
[B] b_tc2_static_256 -> B_tc2_t32_static_256
[B] b_tc2_static_1024 -> B_tc2_t1_static_1024
[B] b_tc2_static_1024 -> B_tc2_t2_static_1024
[B] b_tc2_static_1024 -> B_tc2_t4_static_1024
[B] b_tc2_static_1024 -> B_tc2_t8_static_1024
[B] b_tc2_static_1024 -> B_tc2_t16_static_1024
[B] b_tc2_static_1024 -> B_tc2_t32_static_1024
[B] b_tc3 -> B_tc3_t1_b_tc3
[B] b_tc3 -> B_tc3_t2_b_tc3
[B] b_tc3 -> B_tc3_t4_b_tc3
[B] b_tc3 -> B_tc3_t8_b_tc3
[B] b_tc3 -> B_tc3_t16_b_tc3
[B] b_tc3 -> B_tc3_t32_b_tc3
[B] b_tc4_auto -> B_tc4_t1_auto
[B] b_tc4_auto -> B_tc4_t2_auto
[B] b_tc4_auto -> B_tc4_t4_auto
[B] b_tc4_auto -> B_tc4_t8_auto
[B] b_tc4_auto -> B_tc4_t16_auto
[B] b_tc4_auto -> B_tc4_t32_auto
[B] b_tc4_dynamic -> B_tc4_t1_dynamic
[B] b_tc4_dynamic -> B_tc4_t2_dynamic
[B] b_tc4_dynamic -> B_tc4_t4_dynamic
[B] b_tc4_dynamic -> B_tc4_t8_dynamic
[B] b_tc4_dynamic -> B_tc4_t16_dynamic
[B] b_tc4_dynamic -> B_tc4_t32_dynamic
[B] b_tc4_dynamic_64 -> B_tc4_t1_dynamic_64
[B] b_tc4_dynamic_64 -> B_tc4_t2_dynamic_64
[B] b_tc4_dynamic_64 -> B_tc4_t4_dynamic_64
[B] b_tc4_dynamic_64 -> B_tc4_t8_dynamic_64
[B] b_tc4_dynamic_64 -> B_tc4_t16_dynamic_64
[B] b_tc4_dynamic_64 -> B_tc4_t32_dynamic_64
[B] b_tc4_dynamic_256 -> B_tc4_t1_dynamic_256
[B] b_tc4_dynamic_256 -> B_tc4_t2_dynamic_256
[B] b_tc4_dynamic_256 -> B_tc4_t4_dynamic_256
[B] b_tc4_dynamic_256 -> B_tc4_t8_dynamic_256
[B] b_tc4_dynamic_256 -> B_tc4_t16_dynamic_256
[B] b_tc4_dynamic_256 -> B_tc4_t32_dynamic_256
[B] b_tc4_dynamic_1024 -> B_tc4_t1_dynamic_1024
[B] b_tc4_dynamic_1024 -> B_tc4_t2_dynamic_1024
[B] b_tc4_dynamic_1024 -> B_tc4_t4_dynamic_1024
[B] b_tc4_dynamic_1024 -> B_tc4_t8_dynamic_1024
[B] b_tc4_dynamic_1024 -> B_tc4_t16_dynamic_1024
[B] b_tc4_dynamic_1024 -> B_tc4_t32_dynamic_1024
[B] b_tc4_guided -> B_tc4_t1_guided
[B] b_tc4_guided -> B_tc4_t2_guided
[B] b_tc4_guided -> B_tc4_t4_guided
[B] b_tc4_guided -> B_tc4_t8_guided
[B] b_tc4_guided -> B_tc4_t16_guided
[B] b_tc4_guided -> B_tc4_t32_guided
[B] b_tc4_guided_64 -> B_tc4_t1_guided_64
[B] b_tc4_guided_64 -> B_tc4_t2_guided_64
[B] b_tc4_guided_64 -> B_tc4_t4_guided_64
[B] b_tc4_guided_64 -> B_tc4_t8_guided_64
[B] b_tc4_guided_64 -> B_tc4_t16_guided_64
[B] b_tc4_guided_64 -> B_tc4_t32_guided_64
[B] b_tc4_guided_256 -> B_tc4_t1_guided_256
[B] b_tc4_guided_256 -> B_tc4_t2_guided_256
[B] b_tc4_guided_256 -> B_tc4_t4_guided_256
[B] b_tc4_guided_256 -> B_tc4_t8_guided_256
[B] b_tc4_guided_256 -> B_tc4_t16_guided_256
[B] b_tc4_guided_256 -> B_tc4_t32_guided_256
[B] b_tc4_guided_1024 -> B_tc4_t1_guided_1024
[B] b_tc4_guided_1024 -> B_tc4_t2_guided_1024
[B] b_tc4_guided_1024 -> B_tc4_t4_guided_1024
[B] b_tc4_guided_1024 -> B_tc4_t8_guided_1024
[B] b_tc4_guided_1024 -> B_tc4_t16_guided_1024
[B] b_tc4_guided_1024 -> B_tc4_t32_guided_1024
[B] b_tc4_static -> B_tc4_t1_static
[B] b_tc4_static -> B_tc4_t2_static
[B] b_tc4_static -> B_tc4_t4_static
[B] b_tc4_static -> B_tc4_t8_static
[B] b_tc4_static -> B_tc4_t16_static
[B] b_tc4_static -> B_tc4_t32_static
[B] b_tc4_static_64 -> B_tc4_t1_static_64
[B] b_tc4_static_64 -> B_tc4_t2_static_64
[B] b_tc4_static_64 -> B_tc4_t4_static_64
[B] b_tc4_static_64 -> B_tc4_t8_static_64
[B] b_tc4_static_64 -> B_tc4_t16_static_64
[B] b_tc4_static_64 -> B_tc4_t32_static_64
[B] b_tc4_static_256 -> B_tc4_t1_static_256
[B] b_tc4_static_256 -> B_tc4_t2_static_256
[B] b_tc4_static_256 -> B_tc4_t4_static_256
[B] b_tc4_static_256 -> B_tc4_t8_static_256
[B] b_tc4_static_256 -> B_tc4_t16_static_256
[B] b_tc4_static_256 -> B_tc4_t32_static_256
[B] b_tc4_static_1024 -> B_tc4_t1_static_1024
[B] b_tc4_static_1024 -> B_tc4_t2_static_1024
[B] b_tc4_static_1024 -> B_tc4_t4_static_1024
[B] b_tc4_static_1024 -> B_tc4_t8_static_1024
[B] b_tc4_static_1024 -> B_tc4_t16_static_1024
[B] b_tc4_static_1024 -> B_tc4_t32_static_1024
=== DONE: Fri 24 Oct 16:42:49 BST 2025 ===

  Fastest configuration (overall):
  Executable : a_tc2_dynamic
  Tag        : A_tc2_t16_dynamic
  Threads    : 16
  Schedule   : baked
  Chunk      : baked
  Time (ms)  : 1410

  Fastest configuration (Method A):
  Executable : a_tc2_dynamic
  Tag        : A_tc2_t16_dynamic
  Threads    : 16
  Schedule   : baked
  Chunk      : baked
  Time (ms)  : 1410

  Fastest configuration (Method B):
  Executable : b_tc1_static_64
  Tag        : B_tc1_t1_static_64
  Threads    : 1
  Schedule   : baked
  Chunk      : baked
  Time (ms)  : 8759

==================== SUMMARY (stdout only) ====================
Dataset  : small  (root: data)
Inputs   : INFILE=03-output-b.raw | SEARCH=03-search.raw
Results  :
  Method A -> PASSED: 40  FAILED: 0
    ✓ a_tc1_auto a_tc1_dynamic a_tc1_dynamic_64 a_tc1_dynamic_256 a_tc1_dynamic_1024 a_tc1_guided a_tc1_guided_64 a_tc1_guided_256 a_tc1_guided_1024 a_tc1_static a_tc1_static_64 a_tc1_static_256 a_tc1_static_1024 a_tc2_auto a_tc2_dynamic a_tc2_dynamic_64 a_tc2_dynamic_256 a_tc2_dynamic_1024 a_tc2_guided a_tc2_guided_64 a_tc2_guided_256 a_tc2_guided_1024 a_tc2_static a_tc2_static_64 a_tc2_static_256 a_tc2_static_1024 a_tc3_auto a_tc3_dynamic a_tc3_dynamic_64 a_tc3_dynamic_256 a_tc3_dynamic_1024 a_tc3_guided a_tc3_guided_64 a_tc3_guided_256 a_tc3_guided_1024 a_tc3_static a_tc3_static_64 a_tc3_static_256 a_tc3_static_1024 a_tc4
  Method B -> PASSED: 40  FAILED: 0
    ✓ b_tc1_auto b_tc1_dynamic b_tc1_dynamic_64 b_tc1_dynamic_256 b_tc1_dynamic_1024 b_tc1_guided b_tc1_guided_64 b_tc1_guided_256 b_tc1_guided_1024 b_tc1_static b_tc1_static_64 b_tc1_static_256 b_tc1_static_1024 b_tc2_auto b_tc2_dynamic b_tc2_dynamic_64 b_tc2_dynamic_256 b_tc2_dynamic_1024 b_tc2_guided b_tc2_guided_64 b_tc2_guided_256 b_tc2_guided_1024 b_tc2_static b_tc2_static_64 b_tc2_static_256 b_tc2_static_1024 b_tc3 b_tc4_auto b_tc4_dynamic b_tc4_dynamic_64 b_tc4_dynamic_256 b_tc4_dynamic_1024 b_tc4_guided b_tc4_guided_64 b_tc4_guided_256 b_tc4_guided_1024 b_tc4_static b_tc4_static_64 b_tc4_static_256 b_tc4_static_1024
CSV      : outputs/results.csv
Log file : master_results.log
==============================================================
